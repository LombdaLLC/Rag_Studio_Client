{"body": "Visual Instruction Tuning\r\nHaotian Liu1\u2217\r\n, Chunyuan Li2\u2217\r\n, Qingyang Wu3\r\n, Yong Jae Lee1\r\n1University of Wisconsin\u2013Madison 2Microsoft Research 3Columbia University\r\nhttps://llava-vl.github.io\r\nAbstract\r\nInstruction tuning large language models (LLMs) using machine-generated\r\ninstruction-following data has been shown to improve zero-shot capabilities on\r\nnew tasks, but the idea is less explored in the multimodal field. We present the\r\nfirst attempt to use language-only GPT-4 to generate multimodal language-image\r\ninstruction-following data. By instruction tuning on such generated data, we in\ufffetroduce LLaVA: Large Language and Vision Assistant, an end-to-end trained\r\nlarge multimodal model that connects a vision encoder and an LLM for general\ufffepurpose visual and language understanding. To facilitate future research on visual\r\ninstruction following, we construct two evaluation benchmarks with diverse and\r\nchallenging application-oriented tasks. Our experiments show that LLaVA demon\ufffestrates impressive multimodal chat abilities, sometimes exhibiting the behaviors\r\nof multimodal GPT-4 on unseen images/instructions, and yields a 85.1% rela\ufffetive score compared with GPT-4 on a synthetic multimodal instruction-following\r\ndataset. When fine-tuned on Science QA, the synergy of LLaVA and GPT-4\r\nachieves a new state-of-the-art accuracy of 92.53%. We make GPT-4 generated\r\nvisual instruction tuning data, our model, and code publicly available.\r\n1 Introduction\r\nHumans interact with the world through many channels such as vision and language, as each\r\nindividual channel has a unique advantage in representing and communicating certain concepts, and\r\nthus facilitates a better understanding of the world. One of the core aspirations in artificial intelligence\r\nis to develop a general-purpose assistant that can effectively follow multi-modal vision-and-language\r\ninstructions, aligned with human intent to complete various real-world tasks in the wild [4, 27, 26].\r\nTo this end, the community has witnessed an emergent interest in developing language-augmented\r\nfoundation vision models [27, 16], with strong capabilities in open-world visual understanding\r\nsuch as classification [40, 21, 57, 54, 39], detection [29, 62, 33], segmentation [25, 63, 58] and\r\ncaptioning [50, 28], as well as visual generation and editing [42, 43, 56, 15, 44, 30]. We refer readers\r\nto the Computer Vision in the Wild reading list for a more up-to-date literature compilation [12]. In\r\nthis line of work, each task is solved independently by one single large vision model, with the task\r\ninstruction implicitly considered in the model design. Further, language is only utilized to describe\r\nthe image content. While this allows language to play an important role in mapping visual signals to\r\nlanguage semantics\u2014a common channel for human communication, it leads to models that usually\r\nhave a fixed interface with limited interactivity and adaptability to the user\u2019s instructions.\r\nLarge language models (LLM), on the other hand, have shown that language can play a wider\r\nrole: a universal interface for a general-purpose assistant, where various task instructions can be\r\nexplicitly represented in language and guide the end-to-end trained neural assistant to switch to the\r\ntask of interest to solve it. For example, the recent success of ChatGPT [35] and GPT-4 [36] have\r\ndemonstrated the power of aligned LLMs in following human instructions, and have stimulated\r\ntremendous interest in developing open-source LLMs. Among them, LLaMA [49] is an open\ufffesource LLM that matches the performance of GPT-3. Alpaca [48], Vicuna [9], GPT-4-LLM [38]\r\n37th Conference on Neural Information Processing Systems (NeurIPS 2023).\r\narXiv:2304.08485v2 [cs.CV] 11 Dec 2023<PAGE_SPLITTER>\n\nutilize various machine-generated high-quality instruction-following samples to improve the LLM\u2019s\r\nalignment ability, reporting impressive performance compared with proprietary LLMs. Importantly,\r\nthis line of work is text-only.\r\nIn this paper, we present visual instruction-tuning, the first attempt to extend instruction-tuning to\r\nthe language-image multimodal space, to pave the way towards building a general-purpose visual\r\nassistant. In particular, our paper makes the following contributions:\r\n\u2022 Multimodal instruction-following data. One key challenge is the lack of vision-language\r\ninstruction-following data. We present a data reformation perspective and pipeline to convert\r\nimage-text pairs into an appropriate instruction-following format, using ChatGPT/GPT-4.\r\n\u2022 Large multimodal models. We develop a large multimodal model (LMM), by connecting the\r\nopen-set visual encoder of CLIP [40] with the language decoder Vicuna [9], and fine-tuning\r\nend-to-end on our generated instructional vision-language data. Our empirical study validates\r\nthe effectiveness of using generated data for LMM instruction-tuning, and suggests practical\r\ntips for building a general-purpose instruction-following visual agent. When ensembled with\r\nGPT-4, our approach achieves SoTA on the Science QA [34] multimodal reasoning dataset.\r\n\u2022 Multimodal instruction-following benchmark. We present LLaVA-Bench with two challenging\r\nbenchmarks, with a diverse selection of paired images, instructions and detailed annotations.\r\n\u2022 Open-source. We release the following assets to the public: the generated multimodal instruction\r\ndata, the codebase, the model checkpoints, and a visual chat demo.\r\n2 Related Work\r\nMultimodal Instruction-following Agents. In computer vision, existing works that build instruction\ufffefollowing agents can be broadly categorized into two classes: (i) End-to-end trained models, which\r\nare separately explored for each specific research topic. For example, the vision-language navigation\r\ntask [3, 19] and Habitat [47] require the embodied AI agent to follow natural language instructions\r\nand take a sequence of actions to complete goals in visual environments. In the image editing domain,\r\ngiven an input image and a written instruction that tells the agent what to do, InstructPix2Pix [6]\r\nedits images by following the human instructions. (ii) A system that coordinates various models\r\nvia LangChain [1] / LLMs [35], such as Visual ChatGPT [53], X-GPT [63], MM-REACT [55],\r\nVisProg [18], and ViperGPT [46]. While sharing the same goal in building instruction-following\r\nagents, we focus on developing an end-to-end trained language-vision multimodal model for multiple\r\ntasks.\r\nInstruction Tuning. In the natural language processing (NLP) community, to enable LLMs such\r\nas GPT-3 [7], T5 [41], PaLM [10], and OPT [60] to follow natural language instructions and\r\ncomplete real-world tasks, researchers have explored methods for LLM instruction-tuning [37, 52, 51],\r\nleading to instruction-tuned counterparts such as InstructGPT [37]/ChatGPT [35], FLAN-T5 [11],\r\nFLAN-PaLM [11], and OPT-IML [22], respectively. It turns out that this simple approach can\r\neffectively improve the zero- and few-shot generalization abilities of LLMs. It is thus natural\r\nto borrow the idea from NLP to computer vision. More broadly, the teacher-student distillation\r\nideas with foundation models have been studied in other topics such as image classification [14].\r\nFlamingo [2] can be viewed as the GPT-3 moment in the multimodal domain, due to its strong\r\nperformance on zero-shot task transfer and in-context-learning. Other LMMs trained on image\ufffetext pairs include BLIP-2 [28], FROMAGe [24], and KOSMOS-1 [20]. PaLM-E [13] is an LMM\r\nfor embodied AI. Based on the recent \u201cbest\u201d open-source LLM LLaMA, OpenFlamingo [5] and\r\nLLaMA-Adapter [59] are open-source efforts that enable LLaMA to use image inputs, paving the\r\nway to build open-source multimodal LLMs. While these models present promising task transfer\r\ngeneralization performance, they are not explicitly tuned with vision-language instruction data, and\r\ntheir performance in multimodal tasks usually falls short compared to language-only tasks. In this\r\npaper, we aim to fill this gap and study its effectiveness. Finally, note that visual instruction tuning\r\nis different from visual prompt tuning [23]: the former aims to improve the model\u2019s instruction\ufffefollowing abilities, while the latter aims to improve the parameter-efficiency in model adaptation.\r\n3 GPT-assisted Visual Instruction Data Generation\r\nThe community has witnessed a surge in the amount of public multimodal data such as image-text\r\npairs, ranging from CC [8] to LAION [45]. However, when it comes to multimodal instruction\ufffe2<PAGE_SPLITTER>\n\nContext type 1: Captions\r\nA group of people standing outside of a black vehicle with various luggage.\r\nLuggage surrounds a vehicle in an underground parking area\r\nPeople try to fit all of their luggage in an SUV.\r\nThe sport utility vehicle is parked in the public garage, being packed for a trip\r\nSome people with luggage near a van that is transporting it.\r\nContext type 2: Boxes\r\nperson: [0.681, 0.242, 0.774, 0.694], backpack: [0.384, 0.696, 0.485, 0.914], suitcase: ...<omitted>\r\nResponse type 1: conversation\r\nQuestion: What type of vehicle is featured in the image?\r\nAnswer: The image features a black sport utility vehicle (SUV) ...<omitted>\r\nResponse type 2: detailed description\r\nThe image is an underground parking area with a black sport utility vehicle (SUV) parked. There\r\nare three people in the scene, with one person standing closer to the left side of the vehicle, another\r\nperson in the middle, and the third person on the right side. They are all working together to pack\r\ntheir luggage into the SUV for a trip. ...<omitted>\r\nResponse type 3: complex reasoning\r\nQuestion: What challenges do these people face?\r\nAnswer: In the image, a group of people is standing outside a black SUV in a parking area,\r\nsurrounded by various pieces of luggage, including suitcases and backpacks. They are facing the\r\nchallenge of fitting all their luggage into the black SUV. There are multiple suitcases and backpacks\r\nto be packed, which suggests that the group has a significant amount of belongings ...<omitted>\r\nTable 1: One example to illustrate the instruction-following data. The top block shows the contexts\r\nsuch as captions and boxes used to prompt GPT, and the bottom block shows the three types of\r\nresponses. Note that the visual image is not used to prompt GPT, we only show it here as a reference.\r\nfollowing data, the available amount is limited, partially because the process for creating such data is\r\ntime-consuming and less well-defined when human crowd-scouring is considered. Inspired by the\r\nsuccess of recent GPT models in text-annotation tasks [17], we propose to leverage ChatGPT/GPT-4\r\nfor multimodal instruction-following data collection, based on the widely existing image-pair data.\r\nFor an image Xv and its associated caption Xc, it is natural to create a set of questions Xq with the\r\nintent to instruct the assistant to describe the image content. We prompt GPT-4 to curate such a list\r\nof questions (see details in Appendix). Therefore, a simple way to expand an image-text pair to its\r\ninstruction-following version is Human : Xq Xv<STOP> Assistant : Xc<STOP>. Though cheap to\r\nconstruct, this simple expanded version lacks diversity and in-depth reasoning in both the instructions\r\nand responses.\r\nTo mitigate this issue, we leverage language-only GPT-4 or ChatGPT as the strong teacher (both\r\naccept only text as input), to create instruction-following data involving visual content. Specifically,\r\nin order to encode an image into its visual features to prompt a text-only GPT, we use two types of\r\nsymbolic representations: (i) Captions typically describe the visual scene from various perspectives;\r\n(ii) Bounding boxes usually localize the objects in the scene, and each box encodes the object concept\r\nand its spatial location. One example is shown in the top block of Table 14.\r\nThis symbolic representation allows us to encode the image as an LLM-recognizable sequence. We\r\nuse COCO images [31] and generate three types of instruction-following data. One example per type\r\nis shown in the bottom block of Table 14. For each type, we first manually design a few examples.\r\nThey are the only human annotations we have during data collection, and are used as seed examples\r\nin in-context-learning to query GPT-4.\r\n\u2022 Conversation. We design a conversation between the assistant and a person asking questions\r\nabout this photo. The answers are in a tone as if the assistant is seeing the image and answering\r\nthe question. A diverse set of questions are asked about the visual content of the image, including\r\nthe object types, counting the objects, object actions, object locations, relative positions between\r\nobjects. Only questions that have definite answers are considered. Please see Appendix for the\r\ndetailed prompt.\r\n\u2022 Detailed description. To include a rich and comprehensive description for an image, we create a\r\nlist of questions with such an intent. We prompt GPT-4 then curate the list (see detailed prompts\r\n3<PAGE_SPLITTER>\n\nand curation process in Appendix). For each image, we randomly sample one question from the\r\nlist to ask GPT-4 to generate the detailed description.\r\n\u2022 Complex reasoning. The above two types focus on the visual content itself, based on which\r\nwe further create in-depth reasoning questions. The answers typically require a step-by-step\r\nreasoning process by following rigorous logic.\r\nWe collect 158K unique language-image instruction-following samples in total, including 58K in\r\nconversations, 23K in detailed description, and 77k in complex reasoning, respectively. We ablated\r\nthe use of ChatGPT and GPT-4 in our early experiments, and found that GPT-4 consistently provides\r\nhigher quality instruction-following data, such as spatial reasoning.\r\n4 Visual Instruction Tuning\r\n4.1 Architecture\r\nThe primary goal is to effectively leverage the capabilities of both the pre-trained LLM and visual\r\nmodel. The network archtecture is illustrated in Figure 1. We choose Vicuna [9] as our LLM f\u03d5(\u00b7)\r\nparameterized by \u03d5, as it has the best instruction following capabilities in language tasks among\r\npublicly available checkpoints [48, 9, 38].\r\nVision Encoder\r\nW\r\nf\ufffe\r\nProjection\r\nXv\r\nZv\r\nHv\r\nImage Language Instruction\r\nLanguage Response \r\nHq\r\nXq\r\nXa\r\nLanguage Model\r\nFigure 1: LLaVA network architecture.\r\nFor an input image Xv, we consider the pre-trained CLIP visual encoder ViT-L/14 [40], which\r\nprovides the visual feature Zv = g(Xv). The grid features before and after the last Transformer layer\r\nare considered in our experiments. We consider a simple linear layer to connect image features into\r\nthe word embedding space. Specifically, we apply a trainable projection matrix W to convert Zv into\r\nlanguage embedding tokens Hv, which have the same dimensionality as the word embedding space\r\nin the language model:\r\nHv = W \u00b7 Zv, with Zv = g(Xv) (1)\r\nThus, we have a sequence of visual tokens Hv. Note that our simple projection scheme is lightweight,\r\nwhich allows us to iterate data centric experiments quickly. More sophisticated schemes to con\ufffenect the image and language representations can also be considered, such as gated cross-attention\r\nin Flamingo [2] and Q-former in BLIP-2 [28]. We leave exploring possibly more effective and\r\nsophisticated architecture designs for LLaVA as future work.\r\n4.2 Training\r\nFor each image Xv, we generate multi-turn conversation data (X1\r\nq\r\n, X1\r\na\r\n, \u00b7 \u00b7 \u00b7 , XT\r\nq\r\n, XT\r\na\r\n), where T is\r\nthe total number of turns. We organize them as a sequence, by treating all answers as the assistant\u2019s\r\nresponse, and the instruction Xt\r\ninstruct at the t-th turn as:\r\nXt\r\ninstruct =\r\n\u001a\r\nRandomly choose [X1\r\nq\r\n, Xv] or [Xv, X1\r\nq\r\n], the first turn t = 1\r\nXt\r\nq\r\n, the remaining turns t > 1\r\n(2)\r\nThis leads to the unified format for the multimodal instruction-following sequence illustrated in\r\nTable 2. We perform instruction-tuning of the LLM on the prediction tokens, using its original\r\nauto-regressive training objective.\r\nSpecifically, for a sequence of length L, we compute the probability of the target answers Xa by:\r\np(Xa|Xv, Xinstruct) = Y\r\nL\r\ni=1\r\np\u03b8(xi\r\n|Xv, Xinstruct,<i, Xa,<i), (3)\r\n4<PAGE_SPLITTER>\n\nXsystem-message <STOP>\r\nHuman : X1\r\ninstruct <STOP> Assistant: X1\r\na <STOP>\r\nHuman : X2\r\ninstruct <STOP> Assistant: X2\r\na <STOP> \u00b7 \u00b7 \u00b7\r\nTable 2: The input sequence used to train the model. Only two conversation turns are illustrated\r\nhere; in practice, the number of turns varies based on the instruction-following data. In our current\r\nimplementation, we follow Vicuna-v0 [9] to set the system message Xsystem-message and we set\r\n<STOP> = ###. The model is trained to predict the assistant answers and where to stop, and thus\r\nonly green sequence/tokens are used to compute the loss in the auto-regressive model.\r\nwhere \u03b8 is the trainable parameters, Xinstruct,<i and Xa,<i are the instruction and answer tokens in\r\nall turns before the current prediction token xi\r\n, respectively. Please see Table 2 for an illustration of\r\nthe prediction tokens. For the conditionals in (3), we explicitly add Xv to emphasize the fact that the\r\nimage is grounded for all answers, and we omit Xsystem-message and all previous <STOP> for better\r\nreadability. For LLaVA model training, we consider a two-stage instruction-tuning procedure.\r\nStage 1: Pre-training for Feature Alignment. To strike a balance between concept coverage\r\nand training efficiency, we filter CC3M to 595K image-text pairs. Please see Appendix for details\r\nof the filtering process. These pairs are converted to the instruction-following data using the naive\r\nexpansion method describe in Section 3. Each sample can be treated as a single-turn conversation. To\r\nconstruct the input Xinstruct in (2), for an image Xv, a question Xq is randomly sampled, which is a\r\nlanguage instruction to request the assistant to describe the image briefly. The ground-truth prediction\r\nanswer Xa is the original caption. In training, we keep both the visual encoder and LLM weights\r\nfrozen, and maximize the likelihood of (3) with trainable parameters \u03b8 = W (the projection matrix)\r\nonly. In this way, the image features Hv can be aligned with the pre-trained LLM word embedding.\r\nThis stage can be understood as training a compatible visual tokenizer for the frozen LLM.\r\nStage 2: Fine-tuning End-to-End. We always keep the visual encoder weights frozen, and continue\r\nto update both the pre-trained weights of the projection layer and LLM in LLaVA; i.e., the trainable\r\nparameters are \u03b8 = {W, \u03d5} in (3). We consider two specific use case scenarios:\r\n\u2022 Multimodal Chatbot. We develop a Chatbot by fine-tuning on the 158K language-image\r\ninstruction-following data in Section 3. Among the three types of responses, conversation is\r\nmulti-turn while the other two are single-turn. They are uniformly sampled in training.\r\n\u2022 Science QA. We study our method on the ScienceQA benchmark [34], the first large-scale\r\nmultimodal science question dataset that annotates the answers with detailed lectures and\r\nexplanations. Each question is provided a context in the form of natural language or an image.\r\nThe assistant provides the reasoning process in natural language and selects the answer among\r\nmultiple choices. For training in (2), we organize the data as a single turn conversation, the\r\nquestion & context as Xinstruct, and reasoning & answer as Xa.\r\n5 Experiments\r\nWe assess the performance of LLaVA in instruction-following and visual reasoning capabilities with\r\ntwo primary experimental settings: multimodal chatbot and the ScienceQA dataset, respectively. We\r\ntrain all models with 8\u00d7 A100s, following Vicuna\u2019s hyperparameters [9]. We pre-train our model\r\non the filtered CC-595K subset for 1 epoch with a learning rate of 2e-3 and a batch size of 128, and\r\nfine-tune on the proposed LLaVA-Instruct-158K dataset for 3 epochs, with a learning rate of 2e-5 and\r\na batch size of 32. See Appendix for more training details.\r\n5.1 Multimodal Chatbot\r\nWe developed a chatbot demo to show the image understanding and conversation abilities of LLaVA,\r\nand to study how well LLaVA is able to digest visual inputs and exhibit instruction-following\r\ncapabilities. We first use the examples in the original GPT-4 paper [36], shown in Table 3 (more\r\nexamples in Appendix), that require in-depth image understanding. For comparisons, we quote the\r\nprompt and response of the multimodal GPT-4 from their paper, and query BLIP-2 and OpenFlamingo\r\nmodel checkpoints to get their response.\r\n5<PAGE_SPLITTER>\n\nVisual input example, Extreme Ironing:\r\nSource: https://www.barnorama.com/wp-content/uploads/2016/12/03-Confusing-Pictures.jpg\r\nUser What is unusual about this image?\r\nLLaVA The unusual aspect of this image is a man ironing clothes on the back of a minivan or\r\nvan. This is not a typical place to perform this activity, as one would usually iron clothes\r\nin a more stationary and safe location, such as a home, using a regular ironing board.\r\nThe scene depicted in the image is peculiar as it involves a makeshift ironing setup on a\r\nvehicle, which can be both unsafe and unconventional. Additionally, it is not clear how\r\nthe man is able to maintain balance and stability while ironing clothes in such an unstable\r\nenvironment.\r\n[Start a new conversation, and clear the history]\r\nUser What\u2019s happening in the scene?\r\nLLaVA The image depicts a man standing on top of a yellow SUV in a busy city street. He is\r\nholding a portable ladder, seemingly ironing clothes while standing on the vehicle. Around\r\nthe scene, there are other cars, a traffic light, and a fire hydrant. Additionally, there are\r\ntwo other people in the vicinity, one close to the man on the car and another further away.\r\nThe man on the ladder appears to be attracting attention due to his unconventional choice\r\nof ironing his clothes on top of a moving car. The city street around him is bustling with\r\nactivity, adding to the unique nature of the scene.\r\nUser What is unusual about this image?\r\nGPT-4 [36] The unusual thing about this image is that a man is ironing clothes on an ironing board\r\nattached to the roof of a moving taxi.\r\nUser What is unusual about this image?\r\nBLIP-2 a man is sitting on the back of a yellow cab\r\nUser What is unusual about this image?\r\nOpenFlamingo The man is drying his clothes on the hood of his car.\r\nTable 3: Example prompt from GPT-4 paper [36] to compare visual reasoning and chat capabilities.\r\nCompared to BLIP-2 [28] and OpenFlamingo [5], LLaVA accurately follows the user\u2019s instructions,\r\ninstead of simply describing the scene. LLaVA offers a more comprehensive response than GPT-4.\r\nEven when merely asked to describe the image, LLaVA identifies atypical aspects of the image.\r\nSurprisingly, although LLaVA is trained with a small multimodal instruction-following dataset\r\n(\u223c80K unique images), it demonstrates quite similar reasoning results with multimodal GPT-4 on\r\nthese examples. Note that while these images are out-of-domain for LLaVA, LLaVA is still able\r\nto understand the scenes and follow the question instruction to provide a reasonable response. In\r\ncontrast, BLIP-2 and OpenFlamingo focus on describing the image, instead of following the user\r\ninstruction to answer in an appropriate manner.\r\nQuantitative Evaluation. To gain a systematic understanding of the performance of LLaVA, we\r\npropose a quantitative metric to measure the model\u2019s instruction-following capability on multimodal\r\ndata. Inspired by [9], we leverage GPT-4 to measure the quality of generated responses. Specifically,\r\nwe create triplets consisting of image, ground-truth textual descriptions, and question. The candidate\r\nmodels (e.g., LLaVA) predict the answers based on the question and the image. To provide an\r\napproximate theoretical upper bound, we create a reference prediction based on the question and\r\nthe ground-truth textual descriptions, using the text-only GPT-4. After obtaining the responses from\r\nboth models, we feed the question, visual information (in the format of textual descriptions), and\r\nthe generated responses from both assistants, to the judge (i.e., text-only GPT-4). It evaluates the\r\nhelpfulness, relevance, accuracy, and level of detail of the responses from the assistants, and gives an\r\noverall score on a scale of 1 to 10, where a higher score indicates better overall performance. It is\r\nalso asked to provide a comprehensive explanation for the evaluation, for us to better understand the\r\n6<PAGE_SPLITTER>\n\nConversation Detail description Complex reasoning All\r\nFull data 83.1 75.3 96.5 85.1\r\nDetail + Complex 81.5 (-1.6) 73.3 (-2.0) 90.8 (-5.7) 81.9 (-3.2)\r\nConv + 5% Detail + 10% Complex 81.0 (-2.1) 68.4 (-7.1) 91.5 (-5.0) 80.5 (-4.4)\r\nConversation 76.5 (-6.6) 59.8 (-16.2) 84.9 (-12.4) 73.8 (-11.3)\r\nNo Instruction Tuning 22.0 (-61.1) 24.0 (-51.3) 18.5 (-78.0) 21.5 (-63.6)\r\nTable 4: Ablation on LLaVA-Bench (COCO) with different training data. We report relative scores\r\nw.r.t. a text-only GPT-4 model that uses ground truth image captions and bounding boxes as visual\r\ninput. We prompt GPT-4 with the answers from our model outputs and the answers by GPT-4\r\n(text-only), and let it compare between both responses and give a rating with an explanation.\r\nConversation Detail description Complex reasoning All\r\nOpenFlamingo [5] 19.3 \u00b1 0.5 19.0 \u00b1 0.5 19.1 \u00b1 0.7 19.1 \u00b1 0.4\r\nBLIP-2 [28] 54.6 \u00b1 1.4 29.1 \u00b1 1.2 32.9 \u00b1 0.7 38.1 \u00b1 1.0\r\nLLaVA 57.3 \u00b1 1.9 52.5 \u00b1 6.3 81.7 \u00b1 1.8 67.3 \u00b1 2.0\r\nLLaVA\u2020 58.8 \u00b1 0.6 49.2 \u00b1 0.8 81.4 \u00b1 0.3 66.7 \u00b1 0.3\r\nTable 5: Instruction-following capability comparison using relative scores on LLaVA-Bench (In-the\ufffeWild). The results are reported in the format of mean \u00b1 std. For the first three rows, we report three\r\ninference runs. LLaVA performs significantly better than others. \u2020 For a given set of LLaVA decoding\r\nsequences, we evaluate by querying GPT-4 three times; GPT-4 gives a consistent evaluation.\r\nmodels. We report relative scores w.r.t. the text-only GPT-4 model that uses the textural ground truth\r\ndescription as visual input. We create two benchmarks to evaluate the model\u2019s performance.\r\nLLaVA-Bench (COCO). We randomly select 30 images from COCO-Val-2014, and for each\r\nimage, we generate three types of questions (conversation, detailed description, complex reasoning)\r\nusing the proposed data generation pipeline in Sec. 3, totaling 90 questions. This benchmark studies\r\nthe model\u2019s alignment behavior and capabilities with consistent visual inputs. We vary the training\r\ndatasets to study the effectiveness of different types of instruction-following data, and show the results\r\nin Table 4. First, with instruction tuning, the model\u2019s ability of following user instructions improves\r\nsignificantly by over 50 points. Second, adding a small amount of detailed description and complex\r\nreasoning questions contributes to a considerable improvement of the model\u2019s overall capability\r\nby 7 points. Furthermore, it also improves the model\u2019s performance on conversational questions,\r\nsuggesting that improvements in reasoning capabilities complement conversational abilities. Finally,\r\nwe show that having all three types of data yields the best performance at 85.1%.\r\nLLaVA-Bench (In-the-Wild). To evaluate the model\u2019s capability in more challenging tasks and\r\ngeneralizability to novel domains, we collect a diverse set of 24 images with 60 questions in total,\r\nincluding indoor and outdoor scenes, memes, paintings, sketches, etc., and associate each image\r\nwith a highly-detailed and manually-curated description and a proper selection of questions. We\r\ncompare LLaVA, BLIP, and OpenFlamingo in Table 5. Thanks to visual instruction tuning, LLaVA\r\nachieves significantly better performance compared with BLIP-2 (+29%) and OpenFlamingo (+48%).\r\nCompared to the text-only GPT-4 that has access to ground-truth labels, LLaVA achieves an impressive\r\n81.7% performance on complex reasoning questions, with an overall score of 67.3%.\r\nLimitations. This LLaVA-Bench (In-the-Wild) is designed to be challenging and to reveal a model\u2019s\r\nweaknesses. We provide two examples with associated captions and questions in Table 6. For the\r\nramen example (left), to correctly answer the name of the restaurant, it requires the model to have\r\na large knowledge coverage and multilingual understanding capability; to correctly describe the\r\nside dishes, the model may need to retrieve relevant multimodal information from Internet. For the\r\nfridge example (right), perceiving the correct brand of the yogurt requires the model to process high\r\nresolution images and possess extensive knowledge coverage. We also observed an interesting failure\r\nof LLaVA, as it responds with yes when asked if strawberry-flavored yogurt is present, even though\r\nthe fridge contains only yogurt and strawberries. This indicates that, at times, LLaVA perceives\r\nthe image as a \u201cbag of patches\u201d, failing to grasp the complex semantics within the image. We hope\r\nLLaVA serves as a solid baseline on the benchmarks, on which our findings can inspire future work\r\nin developing more capable LMMs.\r\n7<PAGE_SPLITTER>\n\nChallenging examples from LLaVA-Bench (In-the-Wild):\r\nICHIRAN Ramen [source] Filled fridge [source]\r\nAnnotation A close-up photo of a meal at ICHI\ufffeRAN. The chashu ramen bowl with\r\na spoon is placed in the center. The\r\nramen is seasoned with chili sauce,\r\nchopped scallions, and served with\r\ntwo pieces of chashu. Chopsticks are\r\nplaced to the right of the bowl, still in\r\ntheir paper wrap, not yet opened. The\r\nramen is also served with nori on the\r\nleft. On top, from left to right, the fol\ufffelowing sides are served: a bowl of or\ufffeange spice (possibly garlic sauce), a\r\nplate of smoke-flavored stewed pork\r\nwith chopped scallions, and a cup of\r\nmatcha green tea.\r\nAn open refrigerator filled with a variety of food\r\nitems. In the left part of the compartment, towards\r\nthe front, there is a plastic box of strawberries with a\r\nsmall bag of baby carrots on top. Towards the back,\r\nthere is a stack of sauce containers. In the middle\r\npart of the compartment, towards the front, there\r\nis a green plastic box, and there is an unidentified\r\nplastic bag placed on it. Towards the back, there is a\r\ncarton of milk. In the right part of the compartment,\r\ntowards the front, there is a box of blueberries with\r\nthree yogurts stacked on top. The large bottle of\r\nyogurt is Fage non-fat yogurt, and one of the smaller\r\ncups is Fage blueberry yogurt. The brand and flavor\r\nof the other smaller cup are unknown. Towards the\r\nback, there is a container with an unknown content.\r\nQuestion 1 What\u2019s the name of the restaurant? What is the brand of the blueberry-flavored yogurt?\r\nQuestion 2 Describe this photo in detail. Is there strawberry-flavored yogurt in the fridge?\r\nTable 6: Challenging examples from LLaVA-Bench (In-the-Wild), we provide extremely-detailed\r\nannotation for each image for an accurate evaluation. Some questions require the model to extract\r\ndetails from high resolution image and to have a broad knowledge coverage.\r\n5.2 ScienceQA\r\nScienceQA [34] contains 21k multimodal multiple choice questions with rich domain diversity across\r\n3 subjects, 26 topics, 127 categories, and 379 skills. The benchmark dataset is split into training,\r\nvalidation, and test splits with 12726, 4241, and 4241 examples, respectively. We consider two\r\nrepresentative methods, including GPT-3.5 model (text-davinci-002) with and without chain\ufffeof-thought (CoT), LLaMA-Adapter [59], as well as multimodal chain-of-thought (MM-CoT) [61],\r\nwhich is the current SoTA method on this dataset. For more baseline numbers, please see [34].\r\nThe results are reported in Table 7. For LLaVA, we use the visual features before the last layer, ask\r\nthe model to first predict reasons and then the answer, and train it for 12 epochs. It yields 90.92%\r\naccuracy, which is quite close to the SoTA 91.68%. To explore the limit of LLMs, we also prompt\r\nGPT-4 using 2-shot in-context-learning and achieve 82.69% accuracy, which is a 7.52% absolute gain\r\ncompared with 75.17% from GPT-3.5. For a substantial number of questions, we note that GPT-4 fails\r\nsimply because it reports that there is insufficient context such as images or plots. We consider two\r\nschemes to combine the outcomes from our model and GPT-4. (i) A GPT-4 complement. Whenever\r\nGPT-4 fails to provide answers, we use the prediction from our method. This schemes yields 90.97%\r\naccuracy, which is almost the same as applying our method alone. (ii) GPT-4 as the judge. Whenever\r\nGPT-4 and LLaVA produce different answers, we prompt GPT-4 again, asking it to provide its own\r\nfinal answer based on the question and two outcomes. The spirit is similar with CoT, but with the\r\nexternal knowledge from the other model. Surprisingly, this scheme is able to provide consistent\r\nimprovement over all question classes, and achieves a new SoTA accuracy of 92.53%. Interestingly,\r\nthe text-only GPT-4, which cannot process images, improves the overall performance of the model\r\non questions that have an image as context. This is because some of these questions do not actually\r\nrequire the image context for a correct answer. The GPT-4 judge can identify such cases and correct\r\nsome of the errors that LLaVA makes. See the example in Appendix. To the best of our knowledge,\r\n8<PAGE_SPLITTER>\n\nMethod Subject Context Modality Grade Average NAT SOC LAN TXT IMG NO G1-6 G7-12\r\nRepresentative & SoTA methods with numbers reported in the literature\r\nHuman [34] 90.23 84.97 87.48 89.60 87.50 88.10 91.59 82.42 88.40\r\nGPT-3.5 [34] 74.64 69.74 76.00 74.44 67.28 77.42 76.80 68.89 73.97\r\nGPT-3.5 w/ CoT [34] 75.44 70.87 78.09 74.68 67.43 79.93 78.23 69.68 75.17\r\nLLaMA-Adapter [59] 84.37 88.30 84.36 83.72 80.32 86.90 85.83 84.05 85.19\r\nMM-CoTBase [61] 87.52 77.17 85.82 87.88 82.90 86.83 84.65 85.37 84.91\r\nMM-CoTLarge [61] 95.91 82.00 90.82 95.26 88.80 92.89 92.44 90.31 91.68\r\nResults with our own experiment runs\r\nGPT-4\u2020 84.06 73.45 87.36 81.87 70.75 90.73 84.69 79.10 82.69\r\nLLaVA 90.36 95.95 88.00 89.49 88.00 90.66 90.93 90.90 90.92\r\nLLaVA+GPT-4\u2020\r\n(complement) 90.36 95.50 88.55 89.05 87.80 91.08 92.22 88.73 90.97\r\nLLaVA+GPT-4\u2020\r\n(judge) 91.56 96.74 91.09 90.62 88.99 93.52 92.73 92.16 92.53\r\nTable 7: Accuracy (%) on Science QA dataset. Question categories: NAT = natural science, SOC =\r\nsocial science, LAN = language science, TXT = text context, IMG = image context, NO = no context,\r\nG1-6 = grades 1-6, G7-12 = grades 7-12. \u2020Text-only GPT-4, our eval. Our novel model ensembling\r\nwith the text-only GPT-4 consistently improves the model\u2019s performance under all categories, setting\r\nthe new SoTA performance.\r\nthis is the first time that GPT-4 is used for model ensembling. We hope this finding can encourage\r\nfuture research to explore more effective methods to leverage LLMs for model ensembling.\r\nVisual features Before Last\r\nBest variant 90.92 89.96 (-0.96)\r\nPredict answer first - 89.77 (-1.15)\r\nTraining from scratch 85.81 (-5.11) -\r\n7B model size 89.84 (-1.08) -\r\nTable 8: Design choice ablations (%). The differ\ufffeence with the best variant is reported in red text.\r\nAblations. We ablate several design choices\r\non ScienceQA in Table 8. (i) Visual features.\r\nWe tried using the last layer feature from CLIP\r\nvision encoder, which yields 89.96% and is\r\n0.96% lower than the feature before the last\r\nlayer. We hypothesize that this is because\r\nCLIP\u2019s last layer features may focus more on\r\nglobal and abstract image properties compared\r\nto the layer before it, which can focus more on\r\nlocalized properties that are useful for under\ufffestanding specific image details. (ii) Chain-of-thought. To decide the order between the answer\r\nand reasoning process in the model prediction, we run both variants and observe that answer-first\r\nreports the best number 89.77% accuracy in 12 epochs, while reasoning-first can quickly reach\r\n89.77% accuracy in 6 epochs, but no further improvement with more training. Training the model\r\nfor 24 epochs does not improve the performance. We conclude that CoT-like reasoning-first strategy\r\ncan largely improve convergence, but contributes relatively little to the final performance. (iii)\r\nPre-training. We skip pre-training and directly train on Science QA from scratch \u2013 performance drops\r\nto 85.81% accuracy. The 5.11% absolute degradation indicates the importance of our pre-training\r\nstage, in aligning multimodal features while preserving the vast pre-trained knowledge. (iv) Model\r\nsize. We keep all configurations the same as our best 13B model, and train a 7B model. This yields\r\n89.84% accuracy, which is 1.08% lower than 90.92%, demonstrating the importance of model scale.\r\n6 Conclusion\r\nThis paper demonstrated the effectiveness of visual instruction tuning. We presented an automatic\r\npipeline to create language-image instruction-following data, based on which we train LLaVA, a\r\nmultimodal model to follow human intent to complete visual tasks. It achieves the new SoTA\r\naccuracy when fine-tuned on ScienceQA, and excellent visual chat capabilities when fine-tuned\r\non multimodal chat data. Besides, we present the first benchmark to study multimodal instruction\ufffefollowing capability. This paper is an initial step in visual instruction tuning, and mainly focuses on\r\nreal-life tasks. For more quantitative results of LLaVA on academic benchmarks, please refer to the\r\nimproved baselines with visual instruction tuning [32]. We hope our work can inspire future research\r\non building more capable multimodal models.\r\nAcknowledgements. We thank Baolin Peng and Pan Lu for valuable discussions on instruction-tuning\r\nlanguage models and Science QA, respectively. We thank the LLaMA team for giving us access\r\n9<PAGE_SPLITTER>\n\nto their models, and open-source projects, including Alpaca and Vicuna. This work was supported\r\nin part by NSF CAREER IIS2150012, and Institute of Information & communications Technology\r\nPlanning & Evaluation(IITP) grants funded by the Korea government(MSIT) (No. 2022-0-00871,\r\nDevelopment of AI Autonomy and Knowledge Enhancement for AI Agent Collaboration) and\r\n(No. RS-2022-00187238, Development of Large Korean Language Model Technology for Efficient\r\nPre-training).\r\nReferences\r\n[1] Langchain. https://github.com/hwchase17/langchain, 2022. 2\r\n[2] Jean-Baptiste Alayrac, Jeff Donahue, Pauline Luc, Antoine Miech, Iain Barr, Yana Hasson,\r\nKarel Lenc, Arthur Mensch, Katie Millican, Malcolm Reynolds, et al. Flamingo: a visual\r\nlanguage model for few-shot learning. arXiv preprint arXiv:2204.14198, 2022. 2, 4\r\n[3] Peter Anderson, Qi Wu, Damien Teney, Jake Bruce, Mark Johnson, Niko S\u00fcnderhauf, Ian Reid,\r\nStephen Gould, and Anton Van Den Hengel. Vision-and-language navigation: Interpreting\r\nvisually-grounded navigation instructions in real environments. In Proceedings of the IEEE\r\nconference on computer vision and pattern recognition, 2018. 2\r\n[4] Amanda Askell, Yuntao Bai, Anna Chen, Dawn Drain, Deep Ganguli, Tom Henighan, Andy\r\nJones, Nicholas Joseph, Ben Mann, Nova DasSarma, et al. A general language assistant as a\r\nlaboratory for alignment. arXiv preprint arXiv:2112.00861, 2021. 1\r\n[5] Anas Awadalla, Irena Gao, Joshua Gardner, Jack Hessel, Yusuf Hanafy, Wanrong Zhu, Kalyani\r\nMarathe, Yonatan Bitton, Samir Gadre, Jenia Jitsev, Simon Kornblith, Pang Wei Koh, Gabriel\r\nIlharco, Mitchell Wortsman, and Ludwig Schmidt. Openflamingo, March 2023. 2, 6, 7\r\n[6] Tim Brooks, Aleksander Holynski, and Alexei A Efros. Instruct pix2pix: Learning to follow\r\nimage editing instructions. arXiv preprint arXiv:2211.09800, 2022. 2\r\n[7] Tom Brown, Benjamin Mann, Nick Ryder, Melanie Subbiah, Jared D Kaplan, Prafulla Dhariwal,\r\nArvind Neelakantan, Pranav Shyam, Girish Sastry, Amanda Askell, et al. Language models are\r\nfew-shot learners. Advances in neural information processing systems, 33:1877\u20131901, 2020. 2\r\n[8] Soravit Changpinyo, Piyush Sharma, Nan Ding, and Radu Soricut. Conceptual 12m: Pushing\r\nweb-scale image-text pre-training to recognize long-tail visual concepts. In CVPR, 2021. 2\r\n[9] Wei-Lin Chiang, Zhuohan Li, Zi Lin, Ying Sheng, Zhanghao Wu, Hao Zhang, Lianmin Zheng,\r\nSiyuan Zhuang, Yonghao Zhuang, Joseph E. Gonzalez, Ion Stoica, and Eric P. Xing. Vicuna:\r\nAn open-source chatbot impressing gpt-4 with 90%* chatgpt quality, March 2023. 1, 2, 4, 5, 6\r\n[10] Aakanksha Chowdhery, Sharan Narang, Jacob Devlin, Maarten Bosma, Gaurav Mishra, Adam\r\nRoberts, Paul Barham, Hyung Won Chung, Charles Sutton, Sebastian Gehrmann, et al. Palm:\r\nScaling language modeling with pathways. arXiv preprint arXiv:2204.02311, 2022. 2\r\n[11] Hyung Won Chung, Le Hou, Shayne Longpre, Barret Zoph, Yi Tay, William Fedus, Eric Li,\r\nXuezhi Wang, Mostafa Dehghani, Siddhartha Brahma, et al. Scaling instruction-finetuned\r\nlanguage models. arXiv preprint arXiv:2210.11416, 2022. 2\r\n[12] CVinW. Computer vision in the wild. https://github.com/\r\nComputer-Vision-in-the-Wild/CVinW_Readings, 2022. 1\r\n[13] Danny Driess, Fei Xia, Mehdi SM Sajjadi, Corey Lynch, Aakanksha Chowdhery, Brian Ichter,\r\nAyzaan Wahid, Jonathan Tompson, Quan Vuong, Tianhe Yu, et al. PaLM-E: An embodied\r\nmultimodal language model. arXiv preprint arXiv:2303.03378, 2023. 2\r\n[14] Fartash Faghri, Hadi Pouransari, Sachin Mehta, Mehrdad Farajtabar, Ali Farhadi, Mohammad\r\nRastegari, and Oncel Tuzel. Reinforce data, multiply impact: Improved model accuracy and\r\nrobustness with dataset reinforcement. arXiv preprint arXiv:2303.08983, 2023. 2\r\n[15] Oran Gafni, Adam Polyak, Oron Ashual, Shelly Sheynin, Devi Parikh, and Yaniv Taigman.\r\nMake-a-scene: Scene-based text-to-image generation with human priors. ArXiv, abs/2203.13131,\r\n2022. 1\r\n10<PAGE_SPLITTER>\n\n[16] Zhe Gan, Linjie Li, Chunyuan Li, Lijuan Wang, Zicheng Liu, Jianfeng Gao, et al. Vision\ufffelanguage pre-training: Basics, recent advances, and future trends. Foundations and Trends\u00ae in\r\nComputer Graphics and Vision, 2022. 1\r\n[17] Fabrizio Gilardi, Meysam Alizadeh, and Ma\u00ebl Kubli. Chatgpt outperforms crowd-workers for\r\ntext-annotation tasks. arXiv preprint arXiv:2303.15056, 2023. 3\r\n[18] Tanmay Gupta and Aniruddha Kembhavi. Visual programming: Compositional visual reasoning\r\nwithout training. arXiv preprint arXiv:2211.11559, 2022. 2\r\n[19] Weituo Hao, Chunyuan Li, Xiujun Li, Lawrence Carin, and Jianfeng Gao. Towards learning a\r\ngeneric agent for vision-and-language navigation via pre-training. In CVPR, 2020. 2\r\n[20] Shaohan Huang, Li Dong, Wenhui Wang, Yaru Hao, Saksham Singhal, Shuming Ma, Tengchao\r\nLv, Lei Cui, Owais Khan Mohammed, Qiang Liu, et al. Language is not all you need: Aligning\r\nperception with language models. arXiv preprint arXiv:2302.14045, 2023. 2\r\n[21] Gabriel Ilharco, Mitchell Wortsman, Ross Wightman, Cade Gordon, Nicholas Carlini, Rohan\r\nTaori, Achal Dave, Vaishaal Shankar, Hongseok Namkoong, John Miller, Hannaneh Hajishirzi,\r\nAli Farhadi, and Ludwig Schmidt. Openclip. July 2021. If you use this software, please cite it\r\nas below. 1\r\n[22] Srinivasan Iyer, Xi Victoria Lin, Ramakanth Pasunuru, Todor Mihaylov, D\u00e1niel Simig, Ping Yu,\r\nKurt Shuster, Tianlu Wang, Qing Liu, Punit Singh Koura, et al. Opt-iml: Scaling language model\r\ninstruction meta learning through the lens of generalization. arXiv preprint arXiv:2212.12017,\r\n2022. 2\r\n[23] Menglin Jia, Luming Tang, Bor-Chun Chen, Claire Cardie, Serge Belongie, Bharath Hariharan,\r\nand Ser-Nam Lim. Visual prompt tuning. In ECCV, 2022. 2\r\n[24] Jing Yu Koh, Ruslan Salakhutdinov, and Daniel Fried. Grounding language models to images\r\nfor multimodal generation. arXiv preprint arXiv:2301.13823, 2023. 2\r\n[25] Boyi Li, Kilian Q Weinberger, Serge Belongie, Vladlen Koltun, and Ren\u00e9 Ranftl. Language\ufffedriven semantic segmentation. ICLR, 2022. 1\r\n[26] Chunyuan Li, Zhe Gan, Zhengyuan Yang, Jianwei Yang, Linjie Li, Lijuan Wang, and Jianfeng\r\nGao. Multimodal foundation models: From specialists to general-purpose assistants. arXiv\r\npreprint arXiv:2309.10020, 2023. 1\r\n[27] Chunyuan Li, Haotian Liu, Liunian Harold Li, Pengchuan Zhang, Jyoti Aneja, Jianwei Yang,\r\nPing Jin, Houdong Hu, Zicheng Liu, Yong Jae Lee, and Jianfeng Gao. ELEVATER: A bench\ufffemark and toolkit for evaluating language-augmented visual models. In NeurIPS Track on\r\nDatasets and Benchmarks, 2022. 1\r\n[28] Junnan Li, Dongxu Li, Silvio Savarese, and Steven Hoi. Blip-2: Bootstrapping language\ufffeimage pre-training with frozen image encoders and large language models. arXiv preprint\r\narXiv:2301.12597, 2023. 1, 2, 4, 6, 7\r\n[29] Liunian Harold Li, Pengchuan Zhang, Haotian Zhang, Jianwei Yang, Chunyuan Li, Yiwu\r\nZhong, Lijuan Wang, Lu Yuan, Lei Zhang, Jenq-Neng Hwang, et al. Grounded language-image\r\npre-training. In CVPR, 2022. 1\r\n[30] Yuheng Li, Haotian Liu, Qingyang Wu, Fangzhou Mu, Jianwei Yang, Jianfeng Gao, Chunyuan\r\nLi, and Yong Jae Lee. Gligen: Open-set grounded text-to-image generation. arXiv preprint\r\narXiv:2301.07093, 2023. 1\r\n[31] Tsung-Yi Lin, Michael Maire, Serge Belongie, James Hays, Pietro Perona, Deva Ramanan,\r\nPiotr Doll\u00e1r, and C Lawrence Zitnick. Microsoft COCO: Common objects in context. In ECCV,\r\n2014. 3\r\n[32] Haotian Liu, Chunyuan Li, Yuheng Li, and Yong Jae Lee. Improved baselines with visual\r\ninstruction tuning, 2023. 9, 14\r\n11<PAGE_SPLITTER>\n\n[33] Shilong Liu, Zhaoyang Zeng, Tianhe Ren, Feng Li, Hao Zhang, Jie Yang, Chunyuan Li, Jianwei\r\nYang, Hang Su, Jun Zhu, et al. Grounding dino: Marrying dino with grounded pre-training for\r\nopen-set object detection. arXiv preprint arXiv:2303.05499, 2023. 1\r\n[34] Pan Lu, Swaroop Mishra, Tanglin Xia, Liang Qiu, Kai-Wei Chang, Song-Chun Zhu, Oyvind\r\nTafjord, Peter Clark, and Ashwin Kalyan. Learn to explain: Multimodal reasoning via thought\r\nchains for science question answering. Advances in Neural Information Processing Systems,\r\n2022. 2, 5, 8, 9\r\n[35] OpenAI. ChatGPT. https://openai.com/blog/chatgpt/, 2023. 1, 2\r\n[36] OpenAI. Gpt-4 technical report, 2023. 1, 5, 6, 15\r\n[37] Long Ouyang, Jeffrey Wu, Xu Jiang, Diogo Almeida, Carroll Wainwright, Pamela Mishkin,\r\nChong Zhang, Sandhini Agarwal, Katarina Slama, Alex Ray, et al. Training language models to\r\nfollow instructions with human feedback. Advances in Neural Information Processing Systems,\r\n35:27730\u201327744, 2022. 2\r\n[38] Baolin Peng, Chunyuan Li, Pengcheng He, Michel Galley, and Jianfeng Gao. Instruction tuning\r\nwith GPT-4. arXiv preprint arXiv:2304.03277, 2023. 1, 4\r\n[39] Hieu Pham, Zihang Dai, Golnaz Ghiasi, Kenji Kawaguchi, Hanxiao Liu, Adams Wei Yu,\r\nJiahui Yu, Yi-Ting Chen, Minh-Thang Luong, Yonghui Wu, et al. Combined scaling for\r\nopen-vocabulary image classification. arXiv preprint arXiv: 2111.10050, 2021. 1\r\n[40] Alec Radford, Jong Wook Kim, Chris Hallacy, Aditya Ramesh, Gabriel Goh, Sandhini Agarwal,\r\nGirish Sastry, Amanda Askell, Pamela Mishkin, Jack Clark, et al. Learning transferable visual\r\nmodels from natural language supervision. arXiv preprint arXiv:2103.00020, 2021. 1, 2, 4\r\n[41] Colin Raffel, Noam Shazeer, Adam Roberts, Katherine Lee, Sharan Narang, Michael Matena,\r\nYanqi Zhou, Wei Li, and Peter J Liu. Exploring the limits of transfer learning with a unified\r\ntext-to-text transformer. The Journal of Machine Learning Research, 2020. 2\r\n[42] Aditya Ramesh, Prafulla Dhariwal, Alex Nichol, Casey Chu, and Mark Chen. Hierarchical\r\ntext-conditional image generation with clip latents. ArXiv, abs/2204.06125, 2022. 1\r\n[43] Robin Rombach, A. Blattmann, Dominik Lorenz, Patrick Esser, and Bj\u00f6rn Ommer. High\uffferesolution image synthesis with latent diffusion models. CVPR, pages 10674\u201310685, 2022.\r\n1\r\n[44] Chitwan Saharia, William Chan, Saurabh Saxena, Lala Li, Jay Whang, Emily L. Denton, Seyed\r\nKamyar Seyed Ghasemipour, Burcu Karagol Ayan, Seyedeh Sara Mahdavi, Raphael Gontijo\r\nLopes, Tim Salimans, Jonathan Ho, David J. Fleet, and Mohammad Norouzi. Photorealistic\r\ntext-to-image diffusion models with deep language understanding. ArXiv, abs/2205.11487,\r\n2022. 1\r\n[45] Christoph Schuhmann, Romain Beaumont, Richard Vencu, Cade Gordon, Ross Wightman,\r\nMehdi Cherti, Theo Coombes, Aarush Katta, Clayton Mullis, Mitchell Wortsman, et al. Laion\ufffe5b: An open large-scale dataset for training next generation image-text models. arXiv preprint\r\narXiv:2210.08402, 2022. 2\r\n[46] D\u00eddac Sur\u00eds, Sachit Menon, and Carl Vondrick. Vipergpt: Visual inference via python execution\r\nfor reasoning. arXiv preprint arXiv:2303.08128, 2023. 2\r\n[47] Andrew Szot, Alex Clegg, Eric Undersander, Erik Wijmans, Yili Zhao, John Turner, Noah\r\nMaestre, Mustafa Mukadam, Devendra Chaplot, Oleksandr Maksymets, Aaron Gokaslan,\r\nVladimir Vondrus, Sameer Dharur, Franziska Meier, Wojciech Galuba, Angel Chang, Zsolt Kira,\r\nVladlen Koltun, Jitendra Malik, Manolis Savva, and Dhruv Batra. Habitat 2.0: Training home\r\nassistants to rearrange their habitat. In Advances in Neural Information Processing Systems\r\n(NeurIPS), 2021. 2\r\n[48] Rohan Taori, Ishaan Gulrajani, Tianyi Zhang, Yann Dubois, Xuechen Li, Carlos Guestrin, Percy\r\nLiang, and Tatsunori B. Hashimoto. Stanford alpaca: An instruction-following llama model.\r\nhttps://github.com/tatsu-lab/stanford_alpaca, 2023. 1, 4\r\n12<PAGE_SPLITTER>\n\n[49] Hugo Touvron, Thibaut Lavril, Gautier Izacard, Xavier Martinet, Marie-Anne Lachaux, Timo\ufffeth\u00e9e Lacroix, Baptiste Rozi\u00e8re, Naman Goyal, Eric Hambro, Faisal Azhar, et al. Llama: Open\r\nand efficient foundation language models. arXiv preprint arXiv:2302.13971, 2023. 1\r\n[50] Jianfeng Wang, Zhengyuan Yang, Xiaowei Hu, Linjie Li, Kevin Lin, Zhe Gan, Zicheng Liu,\r\nCe Liu, and Lijuan Wang. Git: A generative image-to-text transformer for vision and language.\r\narXiv preprint arXiv:2205.14100, 2022. 1\r\n[51] Yizhong Wang, Yeganeh Kordi, Swaroop Mishra, Alisa Liu, Noah A Smith, Daniel Khashabi,\r\nand Hannaneh Hajishirzi. Self-instruct: Aligning language model with self generated instruc\ufffetions. arXiv preprint arXiv:2212.10560, 2022. 2\r\n[52] Yizhong Wang, Swaroop Mishra, Pegah Alipoormolabashi, Yeganeh Kordi, Amirreza Mirzaei,\r\nAnjana Arunkumar, Arjun Ashok, Arut Selvan Dhanasekaran, Atharva Naik, David Stap, et al.\r\nBenchmarking generalization via in-context instructions on 1,600+ language tasks. arXiv\r\npreprint arXiv:2204.07705, 2022. 2\r\n[53] Chenfei Wu, Shengming Yin, Weizhen Qi, Xiaodong Wang, Zecheng Tang, and Nan Duan.\r\nVisual chatgpt: Talking, drawing and editing with visual foundation models. arXiv preprint\r\narXiv:2303.04671, 2023. 2\r\n[54] Jianwei Yang, Chunyuan Li, Pengchuan Zhang, Bin Xiao, Lu Yuan, Ce Liu, and Jianfeng Gao.\r\nUnified contrastive learning in image-text-label space. CVPR, 2022. 1\r\n[55] Zhengyuan Yang, Linjie Li, Jianfeng Wang, Kevin Lin, Ehsan Azarnasab, Faisal Ahmed,\r\nZicheng Liu, Ce Liu, Michael Zeng, and Lijuan Wang. Mm-react: Prompting chatgpt for\r\nmultimodal reasoning and action. arXiv preprint arXiv:2303.11381, 2023. 2\r\n[56] Jiahui Yu, Yuanzhong Xu, Jing Yu Koh, Thang Luong, Gunjan Baid, Zirui Wang, Vijay\r\nVasudevan, Alexander Ku, Yinfei Yang, Burcu Karagol Ayan, Benton C. Hutchinson, Wei Han,\r\nZarana Parekh, Xin Li, Han Zhang, Jason Baldridge, and Yonghui Wu. Scaling autoregressive\r\nmodels for content-rich text-to-image generation. ArXiv, abs/2206.10789, 2022. 1\r\n[57] Lu Yuan, Dongdong Chen, Yi-Ling Chen, Noel Codella, Xiyang Dai, Jianfeng Gao, Houdong\r\nHu, Xuedong Huang, Boxin Li, Chunyuan Li, et al. Florence: A new foundation model for\r\ncomputer vision. arXiv preprint arXiv:2111.11432, 2021. 1\r\n[58] Hao Zhang, Feng Li, Xueyan Zou, Shilong Liu, Chunyuan Li, Jianfeng Gao, Jianwei Yang,\r\nand Lei Zhang. A simple framework for open-vocabulary segmentation and detection. arXiv\r\npreprint arXiv:2303.08131, 2023. 1\r\n[59] Renrui Zhang, Jiaming Han, Aojun Zhou, Xiangfei Hu, Shilin Yan, Pan Lu, Hongsheng Li,\r\nPeng Gao, and Yu Qiao. Llama-adapter: Efficient fine-tuning of language models with zero-init\r\nattention. arXiv preprint arXiv:2303.16199, 2023. 2, 8, 9\r\n[60] Susan Zhang, Stephen Roller, Naman Goyal, Mikel Artetxe, Moya Chen, Shuohui Chen,\r\nChristopher Dewan, Mona Diab, Xian Li, Xi Victoria Lin, et al. OPT: Open pre-trained\r\ntransformer language models. arXiv preprint arXiv:2205.01068, 2022. 2\r\n[61] Zhuosheng Zhang, Aston Zhang, Mu Li, Hai Zhao, George Karypis, and Alex Smola. Multi\ufffemodal chain-of-thought reasoning in language models. arXiv preprint arXiv:2302.00923, 2023.\r\n8, 9\r\n[62] Yiwu Zhong, Jianwei Yang, Pengchuan Zhang, Chunyuan Li, Noel Codella, Liunian Harold Li,\r\nLuowei Zhou, Xiyang Dai, Lu Yuan, Yin Li, et al. Regionclip: Region-based language-image\r\npretraining. In Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern\r\nRecognition, pages 16793\u201316803, 2022. 1\r\n[63] Xueyan Zou, Zi-Yi Dou, Jianwei Yang, Zhe Gan, Linjie Li, Chunyuan Li, Xiyang Dai, Harkirat\r\nBehl, Jianfeng Wang, Lu Yuan, et al. Generalized decoding for pixel, image, and language.\r\narXiv preprint arXiv:2212.11270, 2022. 1, 2\r\n13<PAGE_SPLITTER>\n\nA Broader Impact\r\nThe broader impact of LLaVA, a general-purpose visual assistant, has potential benefits and risks\r\nassociated with its deployment and release. Some considerations are unique to LLaVA due to its\r\nvisual nature, while others share similarities with existing instruction-following LLMs (e.g., Alpaca,\r\nVicuna, etc.). As LLaVA is built upon LLaMA, Vicuna, and CLIP, it inherits some of the issues\r\nassociated with LLMs and vision encoders. In the following, we outline both the risks and mitigation\r\nstrategies in place for the release of this model.\r\nMalicious input. To minimize potential misuse and harmful consequences, we employ two pre\ufffecautionary measures for LLaVA: (1) OpenAI Filter API for user input text to prevent harmful or\r\ninappropriate text instructions from being processed by the model, and (2) NSFW Filter for uploaded\r\nuser images to detect and block Not Safe For Work (NSFW) content or any other potentially harmful\r\nimage inputs.\r\nHallucination. Similar to LLMs, LLaVA might generate outputs that aren\u2019t grounded in facts\r\nor input data. This raises concerns about inferences made, especially in critical applications (e.g.,\r\nmedical).\r\nBiases. Bias can be transferred from the base models to LLaVA, both from the vision encoder\r\n(CLIP) and the language decoder (LLaMA/Vicuna). This may lead to biased outcomes or unfair\r\nrepresentations of diverse content.\r\nEnergy consumption. Though energy consumption is not a primary concern for LLaVA due to\r\na smaller pretraining dataset (see details in Sec. C), it may become a concern when scaling up the\r\npretraining dataset or increasing the model size, e.g., to a larger LLaMA version like the 65B model.\r\nEvaluation complexities. Assessing the performance of LLaVA is challenging as it involves both\r\nlanguage and visual tasks. Our evaluation benchmark covers several aspects, including accuracy,\r\nconcept coverage, reasoning ability, and creativity. However, additional aspects need consideration,\r\nsuch as the degree of visual content hallucination and fine-grained understanding of visual content.\r\nWhile text-only GPT-4 based multimodal evaluation is consistent and accurate in our study, its\r\nrobustness in different situations and capability to evaluate other unexplored aspects are subjects for\r\nfuture work.\r\nDespite these risks, we believe that the benefits of releasing LLaVA to the research community\r\noutweigh the potential harm. It allows for ongoing investigation and improvement of the model and\r\nengages the community in developing better mitigation strategies to address these concerns. Moreover,\r\nthe release of LLaVA can spur the development of new applications and research directions, ultimately\r\ncontributing to the progress and responsible deployment of foundation models in vision-language\r\ntasks.\r\nB More Results\r\nWe present more qualitative results of LLaVA to analyze its emergent behaviors and observed\r\nweaknesses. For more quantitative results of LLaVA on academic benchmarks, please refer to the\r\nimproved baselines with visual instruction tuning [32]. In Table 9, LLaVA demonstrates a similar\r\nbehavior as GPT-4 in another example from its paper. Similar to the GPT-4 live demo by OpenAI,\r\nLLaVA is capable of generating the HTML/JS/CSS code for an interactive joke website based on\r\na simplified user input sketch in Fig. 2, despite a minor error. As shown in Fig. 3, LLaVA can\r\nfollow user\u2019s instructions in a conversational style and provide detailed responses or creative writings.\r\nFurthermore, LLaVA is able to relate the visual content to the textual knowledge from the pretrained\r\nLLM, as demonstrated in Fig. 4 and Fig. 5.\r\nOne interesting emergent behavior of LLaVA is that it is able to understand visual contents that\r\nare not covered in the training. For example, in Fig. 6, it is able to recognize Elon Musk both in a\r\nheadshot and in a humorous meme where he is dressed as a doge, even though Elon Musk never\r\nappears in the training data for either the visual feature alignment or visual instruction tuning stages of\r\n14<PAGE_SPLITTER>\n\nLLaVA. LLaVA also demonstrates impressive OCR (optical character recognition) ability in Table 9\r\nand Fig. 2, which is rarely covered in our training data.\r\nWe hope these additional results and observations showcase the potential of LLaVA in various\r\napplication areas. In future work, it is important to investigate these emergent behaviors more\r\nthoroughly and to understand the underlying mechanisms that enable LLaVA to demonstrate such\r\ngeneralization abilities. This will pave the way towards building better LMMs, including enhancing\r\nrobustness, reducing biases, and improving the alignment and the scope of the learned vision-language\r\nrepresentations.\r\nVisual input example, Chicken Nugget Map:\r\nUser Can you explain this meme in detail?\r\nLLaVA The meme in the image is a creative and humorous take on food, with a focus on chicken\r\nnuggets, as the center of the universe. The meme begins with the phrase \"Sometimes I just\r\nlook at pictures of the Earth from space and I marvel at how beautiful it all is...\" The main\r\nimage features a tray of cooked chicken nuggets, with the chicken pieces positioned to\r\nresemble the continents and islands on a world map. The meme playfully suggests that the\r\nchicken nuggets represent the Earth, and the various locations depicted in the photo are\r\nactually chicken nugget versions of different places. The punchline of the meme appears\r\nin smaller text at the bottom, reading \"I mean, it\u2019s not the real Earth, but how beautiful it\r\nis all is.\" This lighthearted and entertaining meme combines food and humor, using the\r\nimage of chicken nuggets to create a funny and imaginative representation of the world.\r\nUser Can you explain this meme?\r\nGPT-4 [36] This meme is a joke that combines two unrelated things: pictures of the earth from space\r\nand chicken nuggets. The text of the meme suggests that the image below is a beautiful\r\npicture of the earth from space. However, the image is actually of chicken nuggets\r\narranged to vaguely resemble a map of the world. The humor in this meme comes from\r\nthe unexpected juxtaposition of the text and the image. The text sets up an expectation of a\r\nmajestic image of the earth, but the image is actually something mundane and silly.\r\nUser Can you explain this meme in detail?\r\nBLIP-2 sometimes i just look at pictures of the earth from space and marvel how beautiful it is\r\nUser Can you explain this meme in detail?\r\nOpenFlamingo It\u2019s a picture of a chicken nugget on the International Space Station.\r\nTable 9: Example prompt comparing LLaVA, GPT-4, BLIP-2, and OpenFlamingo\u2019s visual reasoning\r\ncapabilities in understanding the humor. BLIP-2 and OpenFlamingo fail to follow the user\u2019s\r\ninstructions. LLaVA and GPT-4 both explain the meme and its humor, while GPT-4 produces a more\r\nconcise answer.\r\n15<PAGE_SPLITTER>\n\n<!DOCTYPE html>\r\n<html>\r\n<head>\r\n<title>My Joke Website</title>\r\n<style>\r\nbody { background-color: white; font-family: Arial, sans-serif; }\r\n.container { display: flex; flex-direction: column; align-items: center; justify-content: center; height: 100vh; }\r\nh1 { font-size: 36px; margin-bottom: 20px; }\r\np { font-size: 20px; }\r\nbutton { background-color: blue; color: white; border: none; padding: 10px 20px; font-size: 18px; cursor: pointer; }\r\n</style>\r\n</head>\r\n<body>\r\n<div class=\"container\">\r\n<h1>My Joke Website</h1>\r\n<p id=\"punchline\">Welcome to my joke website. Push the button to reveal the punchline!</p>\r\n<button onclick=\"revealPunchline()\">Push me!</button>\r\n</div>\r\n<script>\r\nfunction revealPunchline() {\r\ndocument.getElementById(\"punchline\").innerHTML = \"The punchline is: 'Why was the math book sad? Because it had too many \r\nproblems.'\";\r\n}\r\n</script>\r\n</body>\r\n</html>\r\nTurn this mock-up into an interactive website using html/js, replace \r\nthe joke with a real joke.\r\nRendered website Rendered website\r\n(clicked the button)\r\nPlace the generated HTML code into an HTML renderer to render the web page.\r\nUser\r\nLLaVA\r\nFigure 2: LLaVA generates HTML/JS code for an interactive website based on user sketch inputs.\r\nThe interactive interface works after fixing a minor error (in red) in the generated output. There is\r\nroom for improvement in LLaVA\u2019s output, such as splitting the joke and punchline into two rows,\r\nand only revealing the punchline upon button click, to better reflect the user\u2019s intent.\r\n16<PAGE_SPLITTER>\n\nWith the variety of food items stored in the refrigerator, you can prepare several meals. For example, you can create a fruit salad using the \r\nstrawberries, blueberries, and carrots. Additionally, you can make a delicious smoothie using the fruits and vegetables, which would be a \r\nhealthy and nutritious snack or breakfast option. The milk and eggs can be used to create various dishes, such as a milk-based smoothie, a \r\nbaked casserole, or scrambled eggs. The juice can also be used to make a fresh fruit and juice mix or as a refreshing homemade popsicle. The \r\npossibilities are vast, and the meals you can create will depend on your preferences and dietary needs.\r\nWhat are the meals that I can cook with these?\r\nCertainly! Here's a simple fruit salad recipe using the items in your refrigerator:\r\nIngredients:\r\n- 2 cups fresh strawberries, sliced\r\n- 1 cup fresh blueberries\r\n- 1 large carrot, grated\r\n- Juice of half a lemon\r\n- A handful of chopped fresh parsley or mint\r\n- A few ice cubes\r\n- Optional: honey or maple syrup (adjust to taste)\r\nInstructions:\r\n1. In a large bowl, combine the sliced strawberries, blueberries, and carrot. Gently toss them together to mix.\r\n2. Drizzle the juice of half a lemon over the fruit and vegetables to prevent them from oxidizing and add a refreshing citrus flavor.\r\n3. Sprinkle the chopped fresh parsley or mint over the fruit and gently toss once more.\r\n4. If desired, add a drizzle of honey or maple syrup for a touch of sweetness. Adjust the amount according to your taste preferences.\r\n5. Cover the bowl and refrigerate the fruit salad for at least 30 minutes or up to a few hours. This allows the flavors to meld and creates a \r\nmore refreshing salad.\r\n6. Serve the fruit salad in cups or bowls, garnished with a sprinkle of fresh parsley or mint, if desired.\r\nThis fruit salad recipe is perfect for a healthy snack or side dish, and with the variety of ingredients available in your refrigerator, it should be \r\neasy to put together quickly.\r\nI would like to do the fruit salad. Show me the recipe.\r\nLLaVA\r\nLLaVA\r\nUser\r\nUser\r\nWhen visiting this peaceful location with a pier extending over a serene lake, surrounded by mountains, there are several things to be cautious \r\nabout. First, pay attention to the weather conditions, as sudden changes in weather, especially strong winds or storms, can cause the water to \r\nbecome rough and pose risks to the stability of the pier. Second, be mindful of the structural integrity of the pier; avoid overloading it with too \r\nmany people or excessive weight, as this could potentially damage the pier or cause it to collapse. Additionally, be aware of the surrounding \r\nwildlife and respect their space; do not harm or disturb them in any way. Finally, if you decide to go fishing, ensure that you adhere to any local \r\nfishing regulations and use appropriate fishing techniques to keep the lake ecosystem healthy and maintain the balance of the food chain.\r\nWhat are the things I should be cautious about when I visit here?\r\nTraveling to this picturesque location with a serene lake and mountains in the background was a refreshing and rejuvenating experience. The \r\npier extending over the calm water provided an excellent vantage point from which to appreciate the breathtaking scenery. As I stood on the \r\npier, I couldn't help but feel a deep connection with nature, taking a moment to soak in the peaceful atmosphere.\r\nOne of the highlights of my trip was undoubtedly the fishing experience. The area is teeming with life, and I was thrilled to land a sizeable \r\ncatch, despite the modest size of the lake. The joy of fishing in such a beautiful setting was truly rewarding, and it allowed me to take a break \r\nfrom my busy life and truly immerse myself in the tranquility of nature.\r\nWhile exploring the surrounding area, I came across a family of birds that had built a nest close to the pier, adding to the charm of the \r\nlocation. Interacting with the wildlife and observing their behavior was an enriching experience that I'll cherish for years to come.\r\nIn conclusion, this idyllic destination provided me with an opportunity to unwind and recharge, surrounded by mesmerizing natural beauty and \r\nthe gentle sounds of water and wildlife. If you're looking for a serene escape from the hustle and bustle of everyday life, this pier overlooking \r\nthe lake is the perfect place to find solace and reconnect with nature.\r\nCompose an engaging travel blog post about my trip to this place, highlighting the beautiful \r\nsceneries, joyful experiences, and include possible anecdotes.\r\nUser\r\nUser\r\nLLaVA\r\nLLaVA\r\nFigure 3: LLaVA is capable of recognizing the visual content following the user\u2019s intent, without\r\ndirectly prompting for visual recognition. It also provides a detailed response when prompted with a\r\nfollow-up request, and the generated response is closely related to the provided visual content.\r\n17<PAGE_SPLITTER>\n\nIn the image, a young woman is leaning on a man in front of a beautiful sunset, with both of them standing on a boat. They appear to be \r\nenjoying a romantic moment together. The scene suggests that they could be depicted as the characters Jack and Rose from the popular movie \r\nTitanic. In the movie, their romance blossoms aboard the fictional ocean liner Titanic, with the pair ultimately sharing a passionate kiss as the \r\nship sinks into the ocean. The ending of the movie is known for its emotional and heartfelt scenes, where the characters are forced to say \r\ngoodbye to each other as they are separated by the sinking ship. The image evokes a sense of romance and nostalgia, paying tribute to the \r\niconic love story portrayed in the movie Titanic.\r\nWhat's the ending of this movie?\r\nLLaVA\r\nUser\r\nFigure 4: LLaVA relates the movie scenes to the textual knowledge from the pretrained LLM.\r\nThe painting depicts a dog in a humorous situation, where it appears to be wearing a woman's dress and standing in front of a landscape. \r\nAlthough the artist of the painting is not explicitly identified, it could be a reference to the famous artist Da Vinci, known for his artistic works, \r\nincluding the Mona Lisa. The painting is likely a creative and comical take on the traditional portrait style, replacing a human figure with a dog \r\ndressed in a woman's clothing, making it an interesting and amusing visual piece.\r\nDo you know who drew this painting?\r\nThe painting depicts a woman, commonly believed to be Mona Lisa, the famous artwork by Leonardo da Vinci. It is a portrait painting that \r\nshowcases the woman's enigmatic smile and has become one of the most famous and iconic art pieces in the world. The original work is \r\ndisplayed in the Louvre Museum in Paris, and it is known for its intricate details, use of oil paint, and the artist's innovative techniques that \r\ncontributed to its enduring appeal and mystery.\r\nDo you know who drew this painting?\r\nStart a new conversation, and the history is cleared.\r\nUser\r\nUser\r\nLLaVA\r\nLLaVA\r\nFigure 5: LLaVA recognizes the famous art work, Mona Lisa, by Leonardo da Vinci. When we start\r\na new conversation, it also explains the humourous artwork created on the web, mimicking the Mona\r\nLisa.\r\n18<PAGE_SPLITTER>\n\nThe name of the man in the photo is Elon Musk.\r\nWhat is the name of the man in the photo?\r\nThe name of the man in the photo is Elon Musk.\r\nWhat is the name of the man in the photo?\r\nStart a new conversation, and the history is cleared.\r\nUser\r\nUser\r\nLLaVA\r\nLLaVA\r\nFigure 6: An interesting emergent behavior of LLaVA is its ability to recognize Elon Musk both in a\r\nheadshot and in a humorous meme where he is dressed as a doge. This implies that the pre-trained\r\nCLIP vision encoder may have seen images of Elon Musk. However, it is still surprising because Elon\r\nMusk never appears in the training data for either the visual feature alignment or visual instruction\r\ntuning stages of LLaVA, which indicates that the base language model generalizes to unseen visual\r\nconcepts.\r\nQuestion:\r\nWhich material is this rocking chair made of?\r\nOptions: (A) wood (B) silk\r\nLLaVA answer:\r\nLECTURE: A material is a type of matter.\r\nWood, glass, metal, and plastic are common materials.\r\nSome objects are made of just one material.\r\nMost nails are made of metal.\r\nOther objects are made of more than one material.\r\nThis hammer is made of metal and wood.\r\nSOLUTION: Look at the picture of the rocking chair. The rocking chair is made of two different\r\nmaterials. The legs are made of wood, and the back and seat are made of silk.\r\nThe answer is B.\r\nGPT-4 (text-only) answer:\r\nThe answer is A. BECAUSE: Rocking chairs are typically made of sturdy materials that can support\r\nthe weight of a person and withstand the rocking motion. Wood is a common material used for\r\nmaking rocking chairs due to its strength, durability, and natural appearance.\r\nGPT-4 (text-only) judge:\r\nSince there is no context or image to refer to, I cannot independently analyze the rocking chair in\r\nquestion. However, I can try to analyze the reasoning given by the assistants.\r\nAssistant 1, who claims to have seen the image, mentions that the legs of the rocking chair are\r\nmade of wood, and the back and seat are made of silk, implying that it\u2019s a combination of two\r\nmaterials. However, this response seems less plausible, as silk is not a common material used for\r\nthe construction of rocking chairs due to issues with stability and durability. Typically, one would\r\nexpect the frame, legs, and seat or back to be made of wood, with cushions and padding made of\r\nfabrics, such as cotton or polyester.\r\nAssistant 2 argues that rocking chairs are typically made of sturdy materials, and wood is a common\r\nmaterial used for making rocking chairs due to its strength, durability, and natural appearance. This\r\nreasoning stands true and is based on common knowledge.\r\nGiven the information available, the most plausible answer is that the rocking chair is made of wood,\r\nas suggested by Assistant 1. The answer is A.\r\nTable 10: One example on how the text-only GPT-4 acts as a judge to ensemble the predictions from\r\nLLaVA and a text-only GPT-4, and gives a correct final answer.\r\n19<PAGE_SPLITTER>\n\nC Training Details\r\nWe pre-train our model on the filtered CC-595K subset for 1 epoch with a learning rate of 2e-3 and a\r\nbatch size of 128, and fine-tune on the proposed LLaVA-Instruct-158K dataset for 3 epochs, with a\r\nlearning rate of 2e-5 and a batch size of 32. Following Vicuna, we use the Adam optimizer with no\r\nweight decay and a cosine learning rate with a warmup ratio of 3%. During finetuning, FSDP (Full\r\nShard Data Parallel) and gradient checkpointing is used to save GPU memory, and offloading is not\r\nused. BF16 and TF32 are enabled to achieve a balance between speed and precision.\r\nWe train all models with 8\u00d7 A100s. Pretraining on CC-595K completes within 4 hours. Finetuning\r\non Instruct-158K completes within 10 hours. Finetuning on ScienceQA completes within 4 hours.\r\nD Assets\r\nOur source code, generated instruction-tuning data, proposed benchmark are uploaded to the\r\nanonymized GitHub repository: LLaVA-Annonymous/LLaVA.\r\n1. Source Code: link\r\n2. README: link\r\n3. Instructions to launch the demo: link\r\n4. All prompts and few shot examples for querying GPT-4: link\r\n5. LLaVA-Instruct-158K: link\r\n6. LLaVA-Bench: COCO, In-The-Wild\r\n7. Model checkpoints. The size of the model checkpoints after compression is 25GB, which\r\nexceeds the 5GB limit of GitHub LFS (Large File Storage). We\u2019ll release the checkpoint to\r\nthe public, or upon request with reviewers for this submission.\r\nE Data\r\nInstructions for brief image description. The list of instructions used to briefly describe the image\r\ncontent are shown in Table 11. They present the same meaning with natural language variance.\r\n\u2022 \"Describe the image concisely.\"\r\n\u2022 \"Provide a brief description of the given image.\"\r\n\u2022 \"Offer a succinct explanation of the picture presented.\"\r\n\u2022 \"Summarize the visual content of the image.\"\r\n\u2022 \"Give a short and clear explanation of the subsequent image.\"\r\n\u2022 \"Share a concise interpretation of the image provided.\"\r\n\u2022 \"Present a compact description of the photo\u2019s key features.\"\r\n\u2022 \"Relay a brief, clear account of the picture shown.\"\r\n\u2022 \"Render a clear and concise summary of the photo.\"\r\n\u2022 \"Write a terse but informative summary of the picture.\"\r\n\u2022 \"Create a compact narrative representing the image presented.\"\r\nTable 11: The list of instructions for brief image description.\r\nInstructions for detailed image description. The list of instructions used to describe the image\r\ncontent in detail are shown in Table 12. They present the same meaning with natural language\r\nvariance.\r\nCC3M. We extract noun-phrases using Spacy for each caption over the whole CC3M dataset, and\r\ncount the frequency of each unique noun-phrase. We skip noun-phrases whose frequency is smaller\r\nthan 3, as they are usually rare combinations concept and attributes that has already been covered\r\n20<PAGE_SPLITTER>\n\n\u2022 \"Describe the following image in detail\"\r\n\u2022 \"Provide a detailed description of the given image\"\r\n\u2022 \"Give an elaborate explanation of the image you see\"\r\n\u2022 \"Share a comprehensive rundown of the presented image\"\r\n\u2022 \"Offer a thorough analysis of the image\"\r\n\u2022 \"Explain the various aspects of the image before you\"\r\n\u2022 \"Clarify the contents of the displayed image with great detail\"\r\n\u2022 \"Characterize the image using a well-detailed description\"\r\n\u2022 \"Break down the elements of the image in a detailed manner\"\r\n\u2022 \"Walk through the important details of the image\"\r\n\u2022 \"Portray the image with a rich, descriptive narrative\"\r\n\u2022 \"Narrate the contents of the image with precision\"\r\n\u2022 \"Analyze the image in a comprehensive and detailed manner\"\r\n\u2022 \"Illustrate the image through a descriptive explanation\"\r\n\u2022 \"Examine the image closely and share its details\"\r\n\u2022 \"Write an exhaustive depiction of the given image\"\r\nTable 12: The list of instructions for detailed image description.\r\nby other captions. We then start from the noun-phrases with lowest remaining frequency, add the\r\ncaptions that contain this noun-phrase to the candidate pool. If the frequency of the noun-phrase\r\nis larger than 100, we randomly choose a subset of size 100 out of all its captions. This results in\r\naround 595K image-text pairs.\r\nThe comparison of noun-phrase statistics before and after filtering CC3M is shown in Figure 7. The\r\nfiltered dataset shows a good coverage of concepts whose frequency is higher from 3, but with a\r\nsmaller number of image-text pairs.\r\n0 10000 20000 30000 40000 50000\r\nUnique noun-phrases (ordered by frequency in the descending order)\r\n10\r\n1\r\n10\r\n3\r\n10\r\n5\r\nFrequency\r\nCC3M: 108182\r\nCC3M (Filtered): 31423\r\nFigure 7: Comparison of noun-phrase statistics before and after filtering CC3M. The total number of\r\nunique noun-phrases are reported in the legend.\r\nF Prompts\r\nThe prompt used to generate image-based conversation from ChatGPT/GPT-4 is shown in Table 13.\r\n21<PAGE_SPLITTER>\n\nmessages = [ {\"role\":\"system\", \"content\": f\"\"\"You are an AI visual assistant, and you are\r\nseeing a single image. What you see are provided with five sentences, describing the same image you\r\nare looking at. Answer all questions as you are seeing the image.\r\nDesign a conversation between you and a person asking about this photo. The answers should be in a\r\ntone that a visual AI assistant is seeing the image and answering the question. Ask diverse questions\r\nand give corresponding answers.\r\nInclude questions asking about the visual content of the image, including the object types, counting\r\nthe objects, object actions, object locations, relative positions between objects, etc. Only include\r\nquestions that have definite answers:\r\n(1) one can see the content in the image that the question asks about and can answer confidently;\r\n(2) one can determine confidently from the image that it is not in the image. Do not ask any question\r\nthat cannot be answered confidently.\r\nAlso include complex questions that are relevant to the content in the image, for example, asking\r\nabout background knowledge of the objects in the image, asking to discuss about events happening in\r\nthe image, etc. Again, do not ask about uncertain details. Provide detailed answers when answering\r\ncomplex questions. For example, give detailed examples or reasoning steps to make the content more\r\nconvincing and well-organized. You can include multiple paragraphs if necessary.\"\"\"}\r\n]\r\nfor sample in fewshot_samples:\r\nmessages.append({\"role\":\"user\", \"content\":sample[\u2018context\u2019]})\r\nmessages.append({\"role\":\"assistant\", \"content\":sample[\u2018response\u2019]} )\r\nmessages.append({\"role\":\"user\", \"content\":\u2018\\n\u2019.join(query)})\r\nTable 13: For each query, we illustrate the prompt construction process for ChatGPT/GPT-4 to\r\ncollect query[\u2018response\u2019] from query[\u2018context\u2019], using few-shot in-context-learning, where\r\nexamples are from fewshot_samples, each example including input sample[\u2018context\u2019] and\r\noutput sample[\u2018response\u2019]. Note that messages is the final prompt. In this example, we provide\r\nthe prompt used to generate the conversation response, please see also see its in-context-learning\r\nexamples in Table 15 and Table 16 for details. We recommend readers to check out the codebase for\r\nthe prompts to generated two other types of responses, including detailed decription and complex\r\nreasoning.\r\n22<PAGE_SPLITTER>\n\nContext type 1: Captions\r\nA group of people standing outside of a black vehicle with various luggage.\r\nLuggage surrounds a vehicle in an underground parking area\r\nPeople try to fit all of their luggage in an SUV.\r\nThe sport utility vehicle is parked in the public garage, being packed for a trip\r\nSome people with luggage near a van that is transporting it.\r\nContext type 2: Boxes\r\nperson: [0.681, 0.242, 0.774, 0.694], person: [0.63, 0.222, 0.686, 0.516], person: [0.444, 0.233,\r\n0.487, 0.34], backpack: [0.384, 0.696, 0.485, 0.914], backpack: [0.755, 0.413, 0.846, 0.692],\r\nsuitcase: [0.758, 0.413, 0.845, 0.69], suitcase: [0.1, 0.497, 0.173, 0.579], bicycle: [0.282, 0.363,\r\n0.327, 0.442], car: [0.786, 0.25, 0.848, 0.322], car: [0.783, 0.27, 0.827, 0.335], car: [0.86, 0.254,\r\n0.891, 0.3], car: [0.261, 0.101, 0.787, 0.626]\r\nResponse type 1: conversation\r\nQuestion: What type of vehicle is featured in the image?\r\nAnswer: The image features a black sport utility vehicle (SUV).\r\nQuestion: Where is the vehicle parked?\r\nAnswer: The vehicle is parked in an underground parking area, likely in a public garage.\r\nQuestion: What are the people in the image doing?\r\nAnswer: The people are trying to fit all of their luggage into the SUV, likely preparing for a trip.\r\nResponse type 2: detailed description\r\nThe image is an underground parking area with a black sport utility vehicle (SUV) parked. There\r\nare three people in the scene, with one person standing closer to the left side of the vehicle, another\r\nperson in the middle, and the third person on the right side. They are all working together to pack\r\ntheir luggage into the SUV for a trip.\r\nIn the parking area, various luggage items are scattered around the vehicle. There are two backpacks,\r\none located near the left rear wheel and the other closer to the right side of the vehicle. Additionally,\r\nthere are two suitcases, one on the right side of the car and another further away near the center of\r\nthe parking area. A bicycle can also be seen on the left side of the vehicle.\r\nOther cars are parked around the main SUV, with one car positioned behind it and slightly to the left,\r\nanother behind and slightly to the right, and the third car further behind on the right side.\r\nResponse type 3: complex reasoning\r\nQuestion: What challenges do these people face?\r\nAnswer: In the image, a group of people is standing outside a black SUV in a parking area,\r\nsurrounded by various pieces of luggage, including suitcases and backpacks. They are facing the\r\nchallenge of fitting all their luggage into the black SUV. There are multiple suitcases and backpacks\r\nto be packed, which suggests that the group has a significant amount of belongings to accommodate.\r\nThey might have to strategize and arrange the luggage efficiently to ensure that everything fits\r\nproperly into the vehicle. Additionally, they need to consider the comfort of the passengers and\r\nvisibility while driving, so the placement of the luggage must not obstruct the driver\u2019s view or make\r\nthe passengers uncomfortable during the trip.\r\nTable 14: One example to illustrate the instruction-following data. The top block shows the contexts\r\nsuch as captions and boxes used to prompt GPT, and the bottom block shows the three types of\r\nresponses. Note that the visual image is not used to prompt GPT, we only show it here as a reference.\r\n23<PAGE_SPLITTER>\n\nCaptions\r\nThere is a movie theater that displays the show times above the doors.\r\nA red fire hydrant is deep in the snow.\r\nThe fire hydrant is in the snow near a recently plowed sidewalk.\r\nThis city has had a very hard winter with snow.\r\nA hotel for dogs in the snow in winter.\r\nConversation\r\nQuestion:\r\nWhat color is the fire hydrant in the image?\r\n===\r\nAnswer:\r\nThe fire hydrant in the image is red.\r\n===\r\nQuestion:\r\nIs the fire hydrant fully covered by snow or partially visible?\r\n===\r\nAnswer:\r\nThe fire hydrant is partially visible, with a significant portion of it covered by the deep snow.\r\n===\r\nQuestion:\r\nWhat is the condition of the sidewalk near the fire hydrant?\r\n===\r\nAnswer:\r\nThe sidewalk near the fire hydrant has been recently plowed, so it is relatively clear of snow compared to the surrounding area.\r\n===\r\nQuestion:\r\nWhat does the image suggest about the winter season in the city?\r\n===\r\nAnswer:\r\nThe image suggests that the winter season in the city has been quite harsh and challenging. The significant snow accumulation\r\nseen in the image indicates that the city has experienced heavy snowfall, which can lead to various difficulties and disruptions for\r\nits residents.\r\nFor instance, the deep snow covering the fire hydrant could potentially hinder its accessibility in case of emergencies, which poses\r\nsafety concerns. The recently plowed sidewalk implies that the city\u2019s maintenance crews have been actively working to keep the\r\nwalkways clear and safe for pedestrians, but the sheer amount of snowfall might make it difficult to keep up with the continuous\r\nsnow removal efforts.\r\nFurthermore, such extreme winter conditions can impact transportation, leading to traffic issues, delays in public transit, and\r\nincreased risks of accidents due to slippery roads. It can also cause problems for businesses and schools, as people might face\r\nchallenges commuting to work or attending classes. Additionally, the heavy snow can put extra strain on infrastructure, such as\r\nroofs and power lines, increasing the likelihood of structural damage or power outages.\r\nIn conclusion, the image of the red fire hydrant deep in the snow and the recently plowed sidewalk suggest that the city has faced\r\na particularly severe winter season, with substantial snowfall that has likely caused various challenges and disruptions for its\r\nresidents and infrastructure.\r\nTable 15: One example used in in-context-learning to construct visual conversation data.\r\n24<PAGE_SPLITTER>\n\nCaptions\r\nA man is skiing in the open snow covered hills\r\nA skier is making his way into the snow.\r\nA skier on the foothills of a huge mountain range.\r\nA skier looks at mountains while standing near a trail sign.\r\na single person skiing by an area with a lot of bushes\r\nConversation\r\nQuestion:\r\nWhat is the skier doing?\r\n===\r\nAnswer:\r\nThe skier is skiing in the snow-covered hills, making his way through the snow and enjoying the beautiful mountain scenery. They\r\nare also standing near a trail sign, which indicates their location on the mountain.\r\n===\r\nQuestion:\r\nAre there any other people or skiers visible in the image?\r\n===\r\nAnswer:\r\nNo, there is only a single person skiing in the image, and they are surrounded by an area with a lot of bushes.\r\n===\r\nQuestion:\r\nWhat kind of skiing is the person doing? Cross-country or downhill?\r\n===\r\nAnswer:\r\nBased on what I can see in the photo, it is not possible to definitively determine whether the skier is doing cross-country or\r\ndownhill skiing. However, given the presence of a trail sign and the fact that they are skiing in the foothills, it is more likely that\r\nthe skier is engaged in cross-country skiing. Downhill skiing typically takes place on more steep slopes and involves ski lifts,\r\nwhereas cross-country skiing often occurs on relatively flatter terrain with marked trails.\r\n===\r\nQuestion:\r\nCan you explain cross-country and downhill skiing a bit more?\r\n===\r\nAnswer:\r\nCross-country skiing and downhill skiing are two distinct types of skiing, each with its own techniques, equipment, and terrain\r\npreferences.\r\n1. Cross-Country Skiing:\r\nAlso known as Nordic skiing, cross-country skiing involves traversing relatively flat terrain or gentle slopes using skis and poles.\r\nIt is a popular recreational and competitive sport that focuses on endurance, balance, and aerobic fitness. Cross-country skiers use\r\ntheir own locomotion to move across snow-covered terrain, rather than relying on ski lifts or other forms of assistance.\r\nThere are two main techniques in cross-country skiing:\r\n- Classic: This technique involves skiing in parallel tracks, using a forward-and-backward gliding motion while keeping the skis\r\nparallel to each other. The skier uses their poles to propel themselves forward.\r\n- Skate skiing: This technique is similar to ice skating, where the skier pushes off one ski at an angle and glides on the other. It\r\nrequires a smooth, groomed surface and is typically faster than the classic technique.\r\nCross-country ski equipment consists of lightweight skis, boots, bindings, and poles. The boots are more flexible than those used\r\nin downhill skiing, allowing for better ankle movement and control.\r\n2. Downhill Skiing:\r\nAlso known as alpine skiing, downhill skiing involves descending slopes at high speeds using skis and poles for balance and\r\ncontrol. This sport is more focused on speed, technique, and navigating challenging terrain, including steep slopes, moguls, and\r\neven jumps.\r\nDownhill skiing can be further categorized into several disciplines, such as slalom, giant slalom, super-G, and downhill racing.\r\nEach discipline has its own set of rules, courses, and ski equipment.\r\nDownhill ski equipment includes heavier and stiffer skis, boots, bindings, and poles than those used in cross-country skiing. The\r\nboots are more rigid to provide better support and control during high-speed descents and sharp turns.\r\nIn summary, cross-country skiing is an endurance-based sport that involves traveling across flat or gently sloping terrain, while\r\ndownhill skiing is focused on speed and technique as skiers navigate steeper slopes and challenging terrain. Both sports require\r\nspecialized equipment and techniques, but they offer different experiences and challenges to participants.\r\nTable 16: One example used in in-context-learning to construct visual conversation data.\r\n25"}